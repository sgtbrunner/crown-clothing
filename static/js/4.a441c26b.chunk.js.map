{"version":3,"sources":["redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.styles.js","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","values","selectCollection","collectionUrlParam","selectIsCollecionLoaded","isFetching","withSpinner","WrappedComponent","isLoading","otherProps","connect","dispatch","addItem","item","name","imageUrl","price","className","style","backgroundImage","inverted","onClick","CollectionPreviewContainer","styled","div","TitleLink","Link","PreviewContainer","ColletionPreview","title","items","to","toLowerCase","toUpperCase","filter","element","index","map","key","id","otherCollectionProps","mapStateToProps","createStructuredSelector","CollectionsOverviewContainer","compose","CollectionsOverview"],"mappings":"uHAAA,iHAEMA,EAAa,SAACC,GAAD,OAAWA,EAAMC,MAEvBC,EAAoBC,YAC/B,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKG,eAGJC,EAA8BF,YACzC,CAACD,IACD,SAACE,GAAD,OAAkBA,EAAcE,OAAOC,OAAOH,GAAe,MAGlDI,EAAmB,SAACC,GAAD,OAC9BN,YAAe,CAACD,IAAoB,SAACE,GAAD,OAClCA,EAAcA,EAAYK,GAAsB,SAQvCC,GAL6BP,YACxC,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKU,cAGsBR,YACrC,CAACJ,IACD,SAACE,GAAD,QAAYA,EAAKG,iB,oEClBJQ,IAJK,SAACC,GAAD,OAAsB,YAAmC,IAAhCC,EAA+B,EAA/BA,UAAcC,EAAiB,6BAC1E,OAAOD,EAAY,kBAAC,IAAD,MAAc,kBAACD,EAAqBE,M,gCCLzD,kDAgCeC,gBAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,QAAS,SAACC,GAAD,OAAUF,EAASC,YAAQC,QAGvBH,EAzBQ,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACtBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,MACxB,OACE,yBAAKC,UAAU,mBACb,yBACEA,UAAU,QACVC,MAAO,CACLC,gBAAgB,OAAD,OAASJ,EAAT,QAGnB,yBAAKE,UAAU,qBACb,0BAAMA,UAAU,QAAQH,GACxB,yCAAWE,KAEb,kBAAC,IAAD,CAAcI,UAAQ,EAACC,QAAS,kBAAMT,EAAQC,KAA9C,oB,+xBClBC,IAAMS,EAA6BC,IAAOC,IAAV,KAU1BC,EAAYF,YAAOG,IAAPH,CAAH,KASTI,EAAmBJ,IAAOC,IAAV,KCEdI,EAfU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACvB,kBAACR,EAAD,KACE,kBAACG,EAAD,CAAWM,GAAE,gBAAWF,EAAMG,gBAC3BH,EAAMI,eAET,kBAACN,EAAD,KACGG,EACEI,QAAO,SAACC,EAASC,GAAV,OAAoBA,EAAQ,KACnCC,KAAI,SAACxB,GAAD,OACH,kBAAC,IAAD,CAAgByB,IAAKzB,EAAK0B,GAAI1B,KAAMA,UCE/BH,G,MAAAA,aAJS,SAAChB,GAAD,MAAY,CAClCI,YAAaC,YAA4BL,MAG5BgB,EAZa,SAAC,GAAD,IAAGZ,EAAH,EAAGA,YAAH,OAC1B,yBAAKmB,UAAU,wBACZnB,EAAYuC,KAAI,gBAAGE,EAAH,EAAGA,GAAOC,EAAV,6BACf,kBAAC,EAAD,eAAmBF,IAAKC,GAAQC,YCHhCC,EAAkBC,YAAyB,CAC/ClC,UAAW,SAACd,GAAD,OAAYU,YAAwBV,MAG3CiD,EAA+BC,YACnClC,YAAQ+B,GACRnC,IAFmCsC,CAGnCC,GAEaF","file":"static/js/4.a441c26b.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  (collections) => (collections ? Object.values(collections) : [])\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector([selectCollections], (collections) =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  (shop) => shop.isFetching\n);\n\nexport const selectIsCollecionLoaded = createSelector(\n  [selectShop],\n  (shop) => !!shop.collections\n);\n","import React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst withSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default withSpinner;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addItem } from '../../redux/cart/cart.actions';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './collection-item.styles.scss';\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, imageUrl, price } = item;\n  return (\n    <div className=\"collection-item\">\n      <div\n        className=\"image\"\n        style={{\n          backgroundImage: `url(${imageUrl})`,\n        }}\n      />\n      <div className=\"collection-footer\">\n        <span className=\"name\">{name}</span>\n        <span>{`$${price}`}</span>\n      </div>\n      <CustomButton inverted onClick={() => addItem(item)}>\n        Add to Cart\n      </CustomButton>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item)),\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n  \n  @media screen and (max-width: 767px) {\n    align-items: center;\n  }\n`;\n\nexport const TitleLink = styled(Link)`\n  font-size: 28px;\n  margin-bottom: 25px;\n\n  &:hover {\n    color: grey;\n  }\n`;\n\nexport const PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 767px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;\n","import React from 'react'\n\nimport CollectionItem from '../collection-item/collection-item.component';\nimport {\n  CollectionPreviewContainer,\n  TitleLink,\n  PreviewContainer,\n} from './collection-preview.styles';\n\nconst ColletionPreview = ({ title, items }) => (\n  <CollectionPreviewContainer>\n    <TitleLink to={`/shop/${title.toLowerCase()}`}>\n      {title.toUpperCase()}\n    </TitleLink>\n    <PreviewContainer>\n      {items\n        .filter((element, index) => index < 4)\n        .map((item) => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n    </PreviewContainer>\n  </CollectionPreviewContainer>\n);\n\nexport default ColletionPreview;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\n\nimport CollectionPreview from '../../components/collection-preview/collection-preview.component';\nimport './collections-overview.styles.scss';\n\nconst CollectionsOverview = ({ collections }) => (\n  <div className=\"collections-overview\">\n    {collections.map(({ id, ...otherCollectionProps }) => (\n      <CollectionPreview key={id} {...otherCollectionProps} />\n    ))}\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  collections: selectCollectionsForPreview(state),\n});\n\nexport default connect(mapStateToProps)(CollectionsOverview);\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectIsCollecionLoaded } from '../../redux/shop/shop.selectors';\nimport withSpinner from '../with-spinner/with-spinner.component';\nimport CollectionsOverview from './collections-overview.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: (state) => !selectIsCollecionLoaded(state),\n});\n\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps),\n  withSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;\n"],"sourceRoot":""}