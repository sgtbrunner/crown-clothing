{"version":3,"sources":["redux/shop/shop.selectors.js","components/with-spinner/with-spinner.component.jsx","components/collection-item/collection-item.styles.js","components/collection-item/collection-item.component.jsx","components/collection-preview/collection-preview.styles.js","components/collection-preview/collection-preview.component.jsx","components/collections-overview/collections-overview.styles.js","components/collections-overview/collections-overview.component.jsx","components/collections-overview/collections-overview.container.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","values","selectCollection","collectionUrlParam","selectIsCollecionLoaded","isFetching","withSpinner","WrappedComponent","isLoading","otherProps","CollectionItemContainer","styled","div","AddButton","CustomButton","displayName","BackgroundImage","imageUrl","CollectionFooterContainer","NameContainer","span","connect","dispatch","addItem","item","name","price","data-testid","role","onClick","inverted","CollectionPreviewContainer","TitleLink","Link","PreviewContainer","ColletionPreview","title","items","to","toLowerCase","toUpperCase","filter","element","index","map","key","id","CollectionsOverviewContainer","otherCollectionProps","mapStateToProps","createStructuredSelector","compose","CollectionsOverview"],"mappings":"uHAAA,iHAEMA,EAAa,SAACC,GAAD,OAAWA,EAAMC,MAEvBC,EAAoBC,YAC/B,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKG,eAGJC,EAA8BF,YACzC,CAACD,IACD,SAACE,GAAD,OAAkBA,EAAcE,OAAOC,OAAOH,GAAe,MAGlDI,EAAmB,SAACC,GAAD,OAC9BN,YAAe,CAACD,IAAoB,SAACE,GAAD,OAClCA,EAAcA,EAAYK,GAAsB,SAQvCC,GAL6BP,YACxC,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKU,cAGsBR,YACrC,CAACJ,IACD,SAACE,GAAD,QAAYA,EAAKG,iB,oFChBJQ,IAJb,SAACC,GAAD,OACA,gBAAGC,EAAH,EAAGA,UAAcC,EAAjB,wBACED,EAAY,kBAAC,IAAD,MAAc,kBAACD,EAAqBE,M,oGCLvCC,EAA0BC,IAAOC,IAAV,odA8BvBC,EAAYF,YAAOG,IAAPH,CAAH,2QAgBtBE,EAAUE,YAAc,YAEjB,IAAMC,EAAkBL,IAAOC,IAAV,wKAMN,gBAAGK,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAGtBD,EAAgBD,YAAc,kBAEvB,IAAMG,EAA4BP,IAAOC,IAAV,oIAQtCM,EAA0BH,YAAc,4BAEjC,IAAMI,EAAgBR,IAAOS,KAAV,mEAK1BD,EAAcJ,YAAc,gBCtCbM,gBAAQ,MATI,SAACC,GAAD,MAAe,CACxCC,QAAS,SAACC,GAAD,OAAUF,EAASC,YAAQC,QAQvBH,EA1BQ,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACtBE,EAA0BD,EAA1BC,KAAMR,EAAoBO,EAApBP,SAAUS,EAAUF,EAAVE,MAExB,OACE,kBAAChB,EAAD,CAAyBiB,cAAY,mBACnC,kBAACX,EAAD,CAAiBY,KAAK,MAAMX,SAAUA,IACtC,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAgBM,GAChB,yCAAWC,KAEb,kBAACb,EAAD,CAAWgB,QAAS,kBAAMN,EAAQC,IAAOM,UAAQ,GAAjD,oB,gJCpBOC,EAA6BpB,IAAOC,IAAV,4KAU1BoB,EAAYrB,YAAOsB,IAAPtB,CAAH,8GASTuB,EAAmBvB,IAAOC,IAAV,gNCQduB,EApBU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OACvB,kBAACN,EAAD,CAA4BJ,cAAY,sBACtC,kBAACK,EAAD,CAAWM,GAAE,gBAAWF,EAAMG,gBAC3BH,EAAMI,eAET,kBAACN,EAAD,KACGG,EACEI,QAAO,SAACC,EAASC,GAAV,OAAoBA,EAAQ,KACnCC,KAAI,SAACpB,GAAD,OACH,kBAAC,IAAD,CAAgBqB,IAAKrB,EAAKsB,GAAItB,KAAMA,UCjBjCuB,EAA+BpC,IAAOC,IAAV,yE,SCsB1BS,eARS,SAAC3B,GAAD,MAAY,CAClCI,YAAaC,YAA4BL,MAO5B2B,EAhBa,SAAC,GAAD,IAAGvB,EAAH,EAAGA,YAAH,OAC1B,kBAACiD,EAAD,KACGjD,EAAY8C,KAAI,gBAAGE,EAAH,EAAGA,GAAOE,EAAV,wBACf,kBAAC,EAAD,eAAmBH,IAAKC,GAAQE,WCHhCC,EAAkBC,YAAyB,CAC/C1C,UAAW,SAACd,GAAD,OAAYU,YAAwBV,MAG3CqD,EAA+BI,YACnC9B,YAAQ4B,GACR3C,IAFmC6C,CAGnCC,GAEaL","file":"static/js/4.d86a3b69.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  (collections) => (collections ? Object.values(collections) : [])\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector([selectCollections], (collections) =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  (shop) => shop.isFetching\n);\n\nexport const selectIsCollecionLoaded = createSelector(\n  [selectShop],\n  (shop) => !!shop.collections\n);\n","/* eslint-disable */\nimport React from 'react';\n\nimport Spinner from '../spinner/spinner.component';\n\nconst withSpinner =\n  (WrappedComponent) =>\n  ({ isLoading, ...otherProps }) =>\n    isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n\nexport default withSpinner;\n","import styled from 'styled-components';\nimport CustomButton from '../custom-button/custom-button.component';\n\nexport const CollectionItemContainer = styled.div`\n  width: 22vw;\n  display: flex;\n  flex-direction: column;\n  height: 350px;\n  align-items: center;\n  position: relative;\n  &:hover {\n    .image {\n      opacity: 0.8;\n    }\n    button {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n\n  @media screen and (max-width: 767px) {\n    width: 40vw;\n    &:hover {\n      .image {\n        opacity: unset;\n      }\n      button {\n        opacity: unset;\n      }\n    }\n  }\n`;\n\nexport const AddButton = styled(CustomButton)`\n  width: 80%;\n  height: auto;\n  opacity: 0.7;\n  position: absolute;\n  top: 255px;\n  display: none;\n\n  @media screen and (max-width: 767px) {\n    display: block;\n    opacity: 0.9;\n    min-width: unset;\n    padding: 0 10px;\n  }\n`;\n\nAddButton.displayName = 'AddButton';\n\nexport const BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n`;\n\nBackgroundImage.displayName = 'BackgroundImage';\n\nexport const CollectionFooterContainer = styled.div`\n  width: 100%;\n  height: 5%;\n  display: flex;\n  justify-content: space-between;\n  font-size: 18px;\n`;\n\nCollectionFooterContainer.displayName = 'CollectionFooterContainer';\n\nexport const NameContainer = styled.span`\n  width: 90%;\n  margin-bottom: 15px;\n`;\n\nNameContainer.displayName = 'NameContainer';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { addItem } from '../../redux/cart/cart.actions';\nimport {\n  CollectionItemContainer,\n  CollectionFooterContainer,\n  AddButton,\n  BackgroundImage,\n  NameContainer,\n} from './collection-item.styles';\n\nconst CollectionItem = ({ item, addItem }) => {\n  const { name, imageUrl, price } = item;\n\n  return (\n    <CollectionItemContainer data-testid=\"collection-item\">\n      <BackgroundImage role=\"img\" imageUrl={imageUrl} />\n      <CollectionFooterContainer>\n        <NameContainer>{name}</NameContainer>\n        <span>{`$${price}`}</span>\n      </CollectionFooterContainer>\n      <AddButton onClick={() => addItem(item)} inverted>\n        Add to cart\n      </AddButton>\n    </CollectionItemContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item)),\n});\n\nCollectionItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  addItem: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const CollectionPreviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 767px) {\n    align-items: center;\n  }\n`;\n\nexport const TitleLink = styled(Link)`\n  font-size: 28px;\n  margin-bottom: 25px;\n\n  &:hover {\n    color: grey;\n  }\n`;\n\nexport const PreviewContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 767px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 15px;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CollectionItem from '../collection-item/collection-item.component';\nimport {\n  CollectionPreviewContainer,\n  TitleLink,\n  PreviewContainer,\n} from './collection-preview.styles';\n\nconst ColletionPreview = ({ title, items }) => (\n  <CollectionPreviewContainer data-testid=\"collection-preview\">\n    <TitleLink to={`/shop/${title.toLowerCase()}`}>\n      {title.toUpperCase()}\n    </TitleLink>\n    <PreviewContainer>\n      {items\n        .filter((element, index) => index < 4)\n        .map((item) => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n    </PreviewContainer>\n  </CollectionPreviewContainer>\n);\n\nColletionPreview.propTypes = {\n  title: PropTypes.string.isRequired,\n  items: PropTypes.array.isRequired,\n};\n\nexport default ColletionPreview;\n","import styled from 'styled-components';\n\nexport const CollectionsOverviewContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectCollectionsForPreview } from '../../redux/shop/shop.selectors';\nimport CollectionPreview from '../../components/collection-preview/collection-preview.component';\nimport { CollectionsOverviewContainer } from './collections-overview.styles';\n\nconst CollectionsOverview = ({ collections }) => (\n  <CollectionsOverviewContainer>\n    {collections.map(({ id, ...otherCollectionProps }) => (\n      <CollectionPreview key={id} {...otherCollectionProps} />\n    ))}\n  </CollectionsOverviewContainer>\n);\n\nconst mapStateToProps = (state) => ({\n  collections: selectCollectionsForPreview(state),\n});\n\nCollectionsOverview.propTypes = {\n  collections: PropTypes.array.isRequired,\n};\n\nexport default connect(mapStateToProps)(CollectionsOverview);\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { createStructuredSelector } from 'reselect';\n\nimport { selectIsCollecionLoaded } from '../../redux/shop/shop.selectors';\nimport withSpinner from '../with-spinner/with-spinner.component';\nimport CollectionsOverview from './collections-overview.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: (state) => !selectIsCollecionLoaded(state),\n});\n\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps),\n  withSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;\n"],"sourceRoot":""}