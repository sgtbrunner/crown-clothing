{"version":3,"sources":["components/dialog/alert-content/alert-content.styles.js","components/dialog/alert-content/alert-content.component.jsx","assets/error-icon.svg","assets/success-icon.svg","components/form-input/form-input.styles.js","components/form-input/form-input.component.jsx","utils/functions.utils.js","components/sign-in/sign-in.styles.js","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.styles.js","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.styles.js","pages/sign-in-and-sign-up/sign-in-and-sign-up.page.jsx"],"names":["AlertContentContainer","styled","div","AlertContentMessage","span","AlertContentImage","img","AlertContentButton","button","SUCCESS","ERROR","IconMap","error","ErrorIcon","success","SuccessIcon","isValidAlertType","type","some","item","AlertContent","children","onButtonClick","role","id","src","alt","onClick","module","exports","errorContainerStyles","css","errorLabelStyles","shrinkLabelStyles","FormInputContainer","input","displayName","FormInputError","p","FormInputLabel","label","GroupContainer","FormInput","value","showError","errorText","handleBlur","handleChange","props","className","onBlur","onChange","length","defaultProps","EMAIL_REGEX_KEY","capitalizeFirstLetter","string","toUpperCase","slice","isEmailValid","email","test","String","toLowerCase","SignInContainer","SignInTitle","h2","ButtonsBarContainer","SignInWithGoogleDialogButton","signInKnownErrors","SignIn","INITIAL_STATE","DEFAULT_INITIAL_INPUT_FIELD_STATE","password","useState","credentials","setCredentials","isSignInValid","isValid","useDialog","setDialog","unsetDialog","handleSubmit","event","a","preventDefault","auth","signInWithEmailAndPassword","errorMessage","includes","code","signInWithGoogle","UNKNOWN_ERROR","target","name","fieldName","isFieldValid","onSubmit","EMAIL","EMAIL_ERROR_MESSAGE","required","PASSWORD","PASSWORD_ERROR_MESSAGE","disabled","isGoogleSignIn","SignUpContainer","SignUpTitle","signUpKnownErrors","SignUp","confirmPassword","signUpInput","setSignUpInput","isSignUpValid","createUserWithEmailAndPassword","user","createUserProfileDocument","DISPLAY_NAME","DISPLAY_NAME_ERROR_MESSAGE","CONFIRM_PASSWORD","CONFIRM_PASSWORD_ERROR_MESSAGE","SignInAndSignUpContainer","SignInAndSignOutPage"],"mappings":"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","file":"static/js/6.659a469b.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const AlertContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const AlertContentMessage = styled.span`\n  margin: 20px 0;\n  font-size: 18px;\n  text-align: center;\n`;\n\nexport const AlertContentImage = styled.img`\n  width: var(--icon-length);\n  height: var(--icon-length);\n`;\n\nexport const AlertContentButton = styled.button`\n  padding: 5px 15px;\n  letter-spacing: 0.5px;\n  font-size: 13px;\n  font-family: var(--default-font-family);\n  font-weight: bolder;\n  background-color: var(--white-color);\n  color: var(--primary-color);\n  border: 1px solid var(--primary-color);\n  cursor: pointer;\n  &:hover {\n    background-color: var(--primary-color);\n    color: var(--white-color);\n    border: 1px solid var(--white-color);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ErrorIcon from '../../../assets/error-icon.svg';\nimport SuccessIcon from '../../../assets/success-icon.svg';\nimport {\n  AlertContentContainer,\n  AlertContentImage,\n  AlertContentMessage,\n  AlertContentButton,\n} from './alert-content.styles';\n\nexport const SUCCESS = 'success';\nexport const ERROR = 'error';\n\nconst IconMap = {\n  error: ErrorIcon,\n  success: SuccessIcon,\n};\n\nconst isValidAlertType = (type) =>\n  [SUCCESS, ERROR].some((item) => item === type);\n\nconst AlertContent = ({ children, type, onButtonClick }) => (\n  <AlertContentContainer role=\"alert\">\n    <AlertContentImage\n      id=\"alert-icon\"\n      src={isValidAlertType(type) ? IconMap[type] : null}\n      alt=\"alert-icon\"\n    />\n    <AlertContentMessage>{children}</AlertContentMessage>\n    <AlertContentButton onClick={onButtonClick}>OK</AlertContentButton>\n  </AlertContentContainer>\n);\n\nAlertContent.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  type: PropTypes.oneOf([SUCCESS, ERROR]),\n  onButtonClick: PropTypes.func.isRequired,\n};\n\nexport default AlertContent;\n","module.exports = __webpack_public_path__ + \"static/media/error-icon.e708d1a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/success-icon.03bce88c.svg\";","import styled, { css } from 'styled-components';\n\nconst errorContainerStyles = css`\n  border-color: var(--error-color);\n`;\n\nconst errorLabelStyles = css`\n  color: var(--error-color);\n`;\n\nconst shrinkLabelStyles = css`\n  top: -6px;\n  font-size: 12px;\n  color: var(--primary-color);\n`;\n\nexport const FormInputContainer = styled.input`\n  background: none;\n  background-color: white;\n  color: var(--primary-color);\n  font-size: 18px;\n  padding: 10px 10px 10px 5px;\n  display: block;\n  width: 100%;\n  border: none;\n  border-radius: 0;\n  border-bottom: 1px solid var(--disabled-color);\n  margin: 25px 0;\n  &:focus {\n    outline: none;\n  }\n  &:focus ~ label {\n    ${shrinkLabelStyles}\n  }\n  &.error {\n    ${errorContainerStyles};\n  }\n`;\n\nFormInputContainer.displayName = 'FormInputContainer';\n\nexport const FormInputError = styled.p`\n  color: var(--error-color);\n  position: absolute;\n  margin-top: -20px;\n  margin-left: 5px;\n`;\n\nFormInputError.displayName = 'FormInputError';\n\nexport const FormInputLabel = styled.label`\n  color: var(--disabled-color);\n  font-size: 16px;\n  font-weight: normal;\n  position: absolute;\n  pointer-events: none;\n  left: 5px;\n  top: 10px;\n  transition: 300ms ease all;\n  &.shrink {\n    ${shrinkLabelStyles}\n  }\n  &.error {\n    ${errorLabelStyles};\n  }\n`;\n\nFormInputLabel.displayName = 'FormInputLabel';\n\nexport const GroupContainer = styled.div`\n  position: relative;\n  margin: 45px 0;\n  input[type='password'] {\n    letter-spacing: 0.3em;\n  }\n`;\n\nGroupContainer.displayName = 'GroupContainer';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  GroupContainer,\n  FormInputContainer,\n  FormInputLabel,\n  FormInputError,\n} from './form-input.styles';\n\nconst FormInput = ({\n  label,\n  value,\n  showError,\n  errorText,\n  handleBlur,\n  handleChange,\n  ...props\n}) => (\n  <GroupContainer>\n    <FormInputContainer\n      className={showError ? 'error' : ''}\n      onBlur={handleBlur}\n      onChange={handleChange}\n      {...props}\n    />\n    <FormInputLabel\n      className={`${value.length ? 'shrink' : ''} ${showError ? 'error' : ''}`}\n    >\n      {label}\n    </FormInputLabel>\n    {showError && <FormInputError role=\"alert\">{errorText}</FormInputError>}\n  </GroupContainer>\n);\n\nFormInput.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  showError: PropTypes.bool,\n  errorText: PropTypes.string,\n  handleBlur: PropTypes.func,\n  handleChange: PropTypes.func,\n};\n\nFormInput.defaultProps = {\n  showError: false,\n  errorText: '',\n  handleBlur: () => {},\n  handleChange: () => {},\n};\n\nexport default FormInput;\n","const EMAIL_REGEX_KEY = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\n\nexport const capitalizeFirstLetter = (string) =>\n  string[0].toUpperCase() + string.slice(1);\n\nexport const isEmailValid = (email) =>\n  EMAIL_REGEX_KEY.test(String(email).toLowerCase());\n","import styled from 'styled-components';\n\nexport const SignInContainer = styled.div`\n  width: 380px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const SignInTitle = styled.h2`\n  margin: 10px 0;\n`;\n\nexport const ButtonsBarContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 60px;\n`;\n\nexport const SignInWithGoogleDialogButton = styled.button`\n  border: none;\n  padding: 0;\n  font-size: 18px;\n  font-family: var(--default-font-family);\n  background: none;\n  color: var(--secondary-color);\n  cursor: pointer;\n`;\n","import React, { useState } from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { useDialog } from '../dialog/dialog.provider';\nimport AlertContent, {\n  ERROR,\n} from '../dialog/alert-content/alert-content.component';\nimport { auth, signInWithGoogle } from '../../utils/firebase.utils';\nimport {\n  DEFAULT_INITIAL_INPUT_FIELD_STATE,\n  EMAIL,\n  PASSWORD,\n  EMAIL_ERROR_MESSAGE,\n  PASSWORD_ERROR_MESSAGE,\n  UNKNOWN_ERROR,\n} from '../../utils/constants.utils';\nimport {\n  capitalizeFirstLetter,\n  isEmailValid,\n} from '../../utils/functions.utils';\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer,\n  SignInWithGoogleDialogButton,\n} from './sign-in.styles';\n\nconst signInKnownErrors = ['auth/wrong-password', 'auth/user-not-found'];\n\nconst SignIn = () => {\n  const INITIAL_STATE = {\n    email: DEFAULT_INITIAL_INPUT_FIELD_STATE,\n    password: DEFAULT_INITIAL_INPUT_FIELD_STATE,\n  };\n  const [credentials, setCredentials] = useState(INITIAL_STATE);\n  const { email, password } = credentials;\n  const isSignInValid = email.isValid && password.isValid;\n  const { setDialog, unsetDialog } = useDialog();\n\n  const isFieldValid = (fieldName, value) => {\n    const validators = {\n      email: isEmailValid(value),\n      password: value.length >= 6,\n    };\n\n    return validators[fieldName];\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      await auth.signInWithEmailAndPassword(email.value, password.value);\n    } catch (error) {\n      const errorMessage = signInKnownErrors.includes(error?.code) ? (\n        <span>\n          Invalid username and/or password. Have you tried{' '}\n          <SignInWithGoogleDialogButton\n            type=\"button\"\n            onClick={() => {\n              unsetDialog();\n              signInWithGoogle();\n            }}\n          >\n            Signing in with Google\n          </SignInWithGoogleDialogButton>\n          ?\n        </span>\n      ) : (\n        UNKNOWN_ERROR\n      );\n\n      setDialog(\n        <AlertContent type={ERROR} onButtonClick={unsetDialog}>\n          {errorMessage}\n        </AlertContent>\n      );\n    }\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n    const isValid = isFieldValid(name, value);\n    setCredentials({\n      ...credentials,\n      [name]: {\n        ...credentials[name],\n        isValid,\n        showError: credentials[name].showError && !isValid,\n        value,\n      },\n    });\n  };\n\n  const handleBlur = (input) => {\n    setCredentials({\n      ...credentials,\n      [input]: {\n        ...credentials[input],\n        showError: !credentials[input].isValid,\n      },\n    });\n  };\n\n  return (\n    <SignInContainer>\n      <SignInTitle>I already have an account</SignInTitle>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name={EMAIL}\n          type={EMAIL}\n          label={capitalizeFirstLetter(EMAIL)}\n          value={email.value}\n          handleBlur={() => handleBlur(EMAIL)}\n          handleChange={handleChange}\n          showError={email.showError}\n          errorText={EMAIL_ERROR_MESSAGE}\n          required\n        />\n        <FormInput\n          name={PASSWORD}\n          type={PASSWORD}\n          label={capitalizeFirstLetter(PASSWORD)}\n          value={password.value}\n          handleBlur={() => handleBlur(PASSWORD)}\n          handleChange={handleChange}\n          showError={password.showError}\n          errorText={PASSWORD_ERROR_MESSAGE}\n          required\n        />\n        <ButtonsBarContainer>\n          <CustomButton type=\"submit\" disabled={!isSignInValid}>\n            Sign in\n          </CustomButton>\n          <CustomButton type=\"button\" onClick={signInWithGoogle} isGoogleSignIn>\n            Sign in with Google\n          </CustomButton>\n        </ButtonsBarContainer>\n      </form>\n    </SignInContainer>\n  );\n};\n\nexport default SignIn;\n","import styled from 'styled-components';\n\nexport const SignUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 380px;\n`;\n\nexport const SignUpTitle = styled.h2`\n  margin: 10px 0;\n`;\n","import React, { useState } from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { useDialog } from '../dialog/dialog.provider';\nimport AlertContent, {\n  ERROR,\n} from '../dialog/alert-content/alert-content.component';\nimport { auth, createUserProfileDocument } from '../../utils/firebase.utils';\nimport {\n  DEFAULT_INITIAL_INPUT_FIELD_STATE,\n  DISPLAY_NAME,\n  EMAIL,\n  PASSWORD,\n  CONFIRM_PASSWORD,\n  DISPLAY_NAME_ERROR_MESSAGE,\n  EMAIL_ERROR_MESSAGE,\n  PASSWORD_ERROR_MESSAGE,\n  CONFIRM_PASSWORD_ERROR_MESSAGE,\n  UNKNOWN_ERROR,\n} from '../../utils/constants.utils';\nimport {\n  capitalizeFirstLetter,\n  isEmailValid,\n} from '../../utils/functions.utils';\n\nimport { SignUpContainer, SignUpTitle } from './sign-up.styles';\n\nconst signUpKnownErrors = ['auth/email-already-in-use'];\n\nconst SignUp = () => {\n  const INITIAL_STATE = {\n    displayName: DEFAULT_INITIAL_INPUT_FIELD_STATE,\n    email: DEFAULT_INITIAL_INPUT_FIELD_STATE,\n    password: DEFAULT_INITIAL_INPUT_FIELD_STATE,\n    confirmPassword: DEFAULT_INITIAL_INPUT_FIELD_STATE,\n  };\n  const [signUpInput, setSignUpInput] = useState(INITIAL_STATE);\n  const { displayName, email, password, confirmPassword } = signUpInput;\n  const isSignUpValid =\n    displayName.isValid &&\n    email.isValid &&\n    password.isValid &&\n    confirmPassword.isValid;\n  const { setDialog, unsetDialog } = useDialog();\n\n  const isFieldValid = (fieldName, value) => {\n    const validators = {\n      displayName: value.length > 2,\n      email: isEmailValid(value),\n      password: value.length >= 6,\n      confirmPassword: value === password.value,\n    };\n\n    return validators[fieldName];\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { user } = await auth.createUserWithEmailAndPassword(\n        email.value,\n        password.value\n      );\n      await createUserProfileDocument(user, { displayName: displayName.value });\n    } catch (error) {\n      const errorMessage = signUpKnownErrors.includes(error?.code)\n        ? 'This email is already registered. Please try a different one!'\n        : UNKNOWN_ERROR;\n\n      setDialog(\n        <AlertContent type={ERROR} onButtonClick={unsetDialog}>\n          {errorMessage}\n        </AlertContent>\n      );\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    const isValid = isFieldValid(name, value);\n    setSignUpInput({\n      ...signUpInput,\n      [name]: {\n        ...signUpInput[name],\n        isValid,\n        showError: signUpInput[name].showError && !isValid,\n        value,\n      },\n    });\n  };\n\n  const handleBlur = (input) => {\n    setSignUpInput({\n      ...signUpInput,\n      [input]: {\n        ...signUpInput[input],\n        showError: !signUpInput[input].isValid,\n      },\n    });\n  };\n\n  return (\n    <SignUpContainer>\n      <SignUpTitle>I do not have an account</SignUpTitle>\n      <span>Sign up with your name, email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name={DISPLAY_NAME}\n          type=\"text\"\n          label=\"Display Name\"\n          value={displayName.value}\n          handleBlur={() => handleBlur(DISPLAY_NAME)}\n          handleChange={handleChange}\n          showError={displayName.showError}\n          errorText={DISPLAY_NAME_ERROR_MESSAGE}\n          required\n        />\n        <FormInput\n          name={EMAIL}\n          type={EMAIL}\n          label={capitalizeFirstLetter(EMAIL)}\n          value={email.value}\n          handleBlur={() => handleBlur(EMAIL)}\n          handleChange={handleChange}\n          showError={email.showError}\n          errorText={EMAIL_ERROR_MESSAGE}\n          required\n        />\n        <FormInput\n          name={PASSWORD}\n          type={PASSWORD}\n          label={capitalizeFirstLetter(PASSWORD)}\n          value={password.value}\n          handleBlur={() => handleBlur(PASSWORD)}\n          handleChange={handleChange}\n          showError={password.showError}\n          errorText={PASSWORD_ERROR_MESSAGE}\n          required\n        />\n        <FormInput\n          name={CONFIRM_PASSWORD}\n          type={PASSWORD}\n          label=\"Confirm Password\"\n          value={confirmPassword.value}\n          handleBlur={() => handleBlur(CONFIRM_PASSWORD)}\n          handleChange={handleChange}\n          showError={confirmPassword.showError}\n          errorText={CONFIRM_PASSWORD_ERROR_MESSAGE}\n          required\n        />\n        <CustomButton type=\"submit\" disabled={!isSignUpValid}>\n          SIGN UP\n        </CustomButton>\n      </form>\n    </SignUpContainer>\n  );\n};\n\nexport default SignUp;\n","import styled from 'styled-components';\n\nexport const SignInAndSignUpContainer = styled.div`\n  width: 1000px;\n  display: flex;\n  justify-content: space-between;\n  margin: 30px auto;\n  @media screen and (max-width: 767px) {\n    flex-direction: column;\n    width: unset;\n    align-items: center;\n    > *:first-child {\n      margin-bottom: 50px;\n    }\n  }\n`;\n","import React from 'react';\n\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\nimport { SignInAndSignUpContainer } from './sign-in-and-sign-up.styles';\n\nconst SignInAndSignOutPage = () => (\n  <SignInAndSignUpContainer>\n    <SignIn />\n    <SignUp />\n  </SignInAndSignUpContainer>\n);\n\nexport default SignInAndSignOutPage;\n"],"sourceRoot":""}